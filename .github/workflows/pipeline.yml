name: Run project on server
on:
  push:
    branches: ["main"]

env:
  # Global environment variables
  PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
  SERVER_IP: ${{ secrets.SERVER_IP }}
  SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to web server
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Connect via SSH and verify server
        run: |
          set -e
          echo "$PRIVATE_KEY" > private-key && chmod 600 private-key
          ssh -o StrictHostKeyChecking=no -i private-key ${SERVER_USERNAME}@${SERVER_IP} '
            # List files in user directory
            ls -la ~
          '
          rm -f private-key

      - name: Update project repo
        run: |
          set -e
          echo "Navigate to Project Repo..."
          echo "--------"
          echo "$PRIVATE_KEY" > private-key && chmod 600 private-key
          ssh -o StrictHostKeyChecking=no -i private-key ${SERVER_USERNAME}@${SERVER_IP} '
           cd SavannaSync
           git restore .
           git pull origin main
           git clean -fd
          '
          rm -f private-key

  install:
    runs-on: ubuntu-24.04
    name: Install dependencies
    steps:
      - name: Install Node version 22
        run: |
          set -e
          echo "$PRIVATE_KEY" > private-key && chmod 600 private-key
          ssh -o StrictHostKeyChecking=no -i private-key ${SERVER_USERNAME}@${SERVER_IP} '
          set -e
          cd ~ # Home directory
          echo "Checking nvm and node versions...if available"
          if command -v nvm &> /dev/null; then
            echo "NVM installed: $(nvm --version)"
            \. "$HOME/.nvm/nvm.sh"
          else
            echo "NVM not installed. Installing now..."
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash
            \. "$HOME/.nvm/nvm.sh"
          fi

          if command -v node &> /dev/null; then
            echo "Node installed: $(node --version)"
            echo "Upgrade to Node 22..."
            nvm install 22
            nvm use 22
            echo "NPM version: $(npm --version)"
            echo "Node version: $(node --version)"
          else
            echo "Installing Node 22..."
            nvm install 22
            nvm use 22
            echo "NPM version: $(npm --version)"
            echo "Node version: $(node --version)"
          fi          
          '
          rm -f private-key

      - name: Install Java 21
        run: |
          set -e
          echo "$PRIVATE_KEY" > private-key && chmod 600 private-key
          ssh -o StrictHostKeyChecking=no -i private-key ${SERVER_USERNAME}@${SERVER_IP} '
          cd ~
          echo "Installing Java..."
          if command -v java &> /dev/null; then
            echo "Java installed: $(java --version)"
          else
            echo "Installing OpenJDK 21..."
            sudo apt update
            sudo apt install -y openjdk-21-jdk
            echo "Java installed: $(java --version)"
          fi
          '
          rm -f private-key

      - name: Install Maven
        run: |
          set -e
          echo "$PRIVATE_KEY" > private-key && chmod 600 private-key
          ssh -o StrictHostKeyChecking=no -i private-key ${SERVER_USERNAME}@${SERVER_IP} '
          set -e
          cd ~
          echo "Installing Maven..."
          if command -v mvn &> /dev/null; then
            echo "Maven installed: $(mvn --version)"
          else
            echo "Installing Maven..."
            sudo apt update
            sudo apt install -y maven
            echo "Maven installed: $(mvn --version)"
          fi
          '
          rm -f private-key

      - name: Install frontend dependencies
        run: |
          set -e
          echo "$PRIVATE_KEY" > private-key && chmod 600 private-key
          ssh -o StrictHostKeyChecking=no -i private-key ${SERVER_USERNAME}@${SERVER_IP} '
          set -e
          cd SavannaSync/frontend
          \. "$HOME/.nvm/nvm.sh"
          nvm use 22
          npm install
          echo "Frontend dependencies installed successfully"
          '
          rm -f private-key

      - name: Build backend
        run: |
          set -e
          echo "$PRIVATE_KEY" > private-key && chmod 600 private-key
          ssh -o StrictHostKeyChecking=no -i private-key ${SERVER_USERNAME}@${SERVER_IP} '
          set -e
          cd SavannaSync/backend/syncsenta-ai-service
          mvn clean compile
          echo "Backend built successfully"
          '
          rm -f private-key
      
          
